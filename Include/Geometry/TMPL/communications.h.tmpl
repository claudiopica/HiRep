/***************************************************************************\
* Copyright (c) 2022, Claudio Pica, Sofie Martins                           *   
* All rights reserved.                                                      * 
\***************************************************************************/

#include "Utils/generics.h"

#if !defined _FIELD_NAME_READABLE
#error Missing _FIELD_NAME_READABLE in communications.h
#endif
#if !defined _FIELD_NAME
#error Missing _FIELD_NAME in communications.h
#endif
#if !defined _FIELD_TYPE
#error Missing _FIELD_TYPE in communications.h
#endif

/**
 * @brief Wait for communications between GPUs to finish before continuing.
 *
 * @param _FIELD_TYPE*	    _FIELD_NAME_READABLE that needs to be synchronized 
 *                          across nodes
 */
void _F_NAME(complete_sendrecv_, _FIELD_NAME)(_FIELD_TYPE *);
/**
 * @brief Fill buffers and start MPI requests to send and receive.
 *
 * @param _FIELD_TYPE*		_FIELD_NAME_READABLE that needs to be synchronized
 *                          across nodes
 */
void _F_NAME(start_sendrecv_, _FIELD_NAME)(_FIELD_TYPE *);
/**
 * @brief Sync field before communications. This can mean different things
 *    depending on geometry implementation.
 *
 * @param _FIELD_TYPE*      _FIELD_NAME_READABLE that needs to be synchronized
 *                           on the local lattice.
 */
void _GPU_F_NAME(sync_, _FIELD_NAME)(_FIELD_TYPE *);
void _F_NAME(fill_buffers_, _FIELD_NAME)(_FIELD_TYPE *);
void _F_NAME(fill_buffers_with_zeroes_, _FIELD_NAME)(_FIELD_TYPE *);

/**
 * @brief Check that the communications of _FIELD_TYPE are not locked and if 
 *        they are throw an error. Only protects of simultaneous communications
 *        if compiled WITH_NEW_GEOMETRY
 * 
 * @param _FIELD_TYPE*      _FIELD_NAME_READABLLE whos communications can
 *                          be locked
*/
void _F_NAME(check_sendrecv_guard_, _FIELD_NAME)(_FIELD_TYPE *);

/**
 * @brief Locks communications. Only protects of simultaneous communications
 *        if compiled WITH_NEW_GEOMETRY
 * 
 * @param _FIELD_TYPE*      _FIELD_NAME_READABLLE whos communications can
 *                          be locked
*/
void _F_NAME(lock_communications_, _FIELD_NAME)(_FIELD_TYPE *);

/**
 * @brief Releases communications. Only protects of simultaneous communications
 *        if compiled WITH_NEW_GEOMETRY
 * 
 * @param _FIELD_TYPE*      _FIELD_NAME_READABLLE whos communications can
 *                          be locked
*/
void _F_NAME(release_communications_, _FIELD_NAME)(_FIELD_TYPE *);

#undef _FIELD_NAME_READABLE
#undef _FIELD_NAME
#undef _FIELD_TYPE