/***************************************************************************\
* Copyright (c) 2022, Claudio Pica, Sofie Martins                           *   
* All rights reserved.                                                      * 
\***************************************************************************/

#include "Utils/generics.h"

#if !defined _FIELD_NAME_READABLE
#error Missing _FIELD_NAME_READABLE in communications.h
#endif
#if !defined _FIELD_NAME
#error Missing _FIELD_NAME in communications.h
#endif
#if !defined _FIELD_TYPE 
#error Missing _FIELD_TYPE in communications.h
#endif

/**
 * @brief Wait for communications between GPUs to finish before continuing.
 *
 * @param _FIELD_TYPE*	    _FIELD_NAME_READABLE that needs to be synchronized 
 *                          across nodes
 */
void _F_NAME(complete_sendrecv_,_FIELD_NAME)(_FIELD_TYPE*);
/**
 * @brief Fill buffers and start MPI requests to send and receive.
 *
 * @param _FIELD_TYPE*		_FIELD_NAME_READABLE that needs to be synchronized
 *                          across nodes
 */
void _F_NAME(start_sendrecv_,_FIELD_NAME)(_FIELD_TYPE*);
/**
 * @brief Sync field before communications. This can mean different things
 *    depending on geometry implementation.
 *
 * @param _FIELD_TYPE*      _FIELD_NAME_READABLE that needs to be synchronized
 *                           on the local lattice.
 */
void _GPU_F_NAME(sync_,_FIELD_NAME)(_FIELD_TYPE*);
void _F_NAME(fill_buffers_,_FIELD_NAME)(_FIELD_TYPE*);
void _F_NAME(fill_buffers_with_zeroes_,_FIELD_NAME)(_FIELD_TYPE*); 

#undef _FIELD_NAME_READABLE
#undef _FIELD_NAME
#undef _FIELD_TYPE