name: build-tests

on:
  push:
    branches:
      - HiRep-CUDA

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      # Ensures that jobs are not cancelled is one job fails
      fail-fast: false
      matrix:
        nc: [2, 3]
        repr: [FUND, ADJ]
        mpi: [-no-mpi, -mpi]
        ecsw: [-expclover,-no-expclover]
        exclude:
          - nc: 3
            repr: ADJ

    name: Build Tests ${{ github.ref_name }} / ${{ github.sha }}
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y openmpi-bin openmpi-common libopenmpi3 libopenmpi-dev ninja-build
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Writing configuration file
      run: ./Make/Utils/write_mkflags.pl -f ./Make/MkFlags.ini -cflags "-Wall -O1" -n ${{ matrix.nc }} -r ${{ matrix.repr }} ${{ matrix.mpi }} ${{ matrix.ecsw }}
    - name: Build HiRep Tests
      run: ./Make/nj TestProgram
    - name: Create build archive
      run: tar -czf build.tgz build
    - uses: actions/upload-artifact@v3
      with:
        name: build-${{ github.sha }}-${{ matrix.mpi }}-${{ matrix.nc }}-${{ matrix.repr }}-${{ matrix.ecsw }}
        path: build.tgz

  run-tests:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      # Ensures that jobs are not cancelled is one job fails
      fail-fast: false
      matrix:
        nc: [2, 3]
        repr: [FUND, ADJ]
        mpi: [-no-mpi, -mpi]
        ecsw: [-expclover,-no-expclover]
        exclude:
          - nc: 3
            repr: ADJ

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y openmpi-bin openmpi-common libopenmpi3 libopenmpi-dev ninja-build
    - uses: actions/download-artifact@v3
      with:
        name: build-${{ github.sha }}-${{ matrix.mpi }}-${{ matrix.nc }}-${{ matrix.repr }}-${{ matrix.ecsw }}
        path: build_archive
    - name: Extract build archive
      run: tar -xzf build_archive/build.tgz
    - name: Run Tests
      run: ./TestProgram/run_tests.sh "Algebra DiracOperator Geometry Inverters Integrators Mesons PureGauge RIMOM Sources StoredConfs Utils GaugeFix Propagator Random SpinorField Update WilsonLoops" -cflags "-Wall -O1" -n ${{ matrix.nc }} -r ${{ matrix.repr }} ${{ matrix.mpi }} ${{ matrix.ecsw }}

