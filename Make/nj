#!/usr/bin/env perl
use warnings;
use strict;
use Cwd qw(abs_path getcwd);
use File::Path qw(make_path);

my $ownpath = abs_path($0);
my $cwd = getcwd;
$ownpath =~ m{^(.*?)/Make/.*} or die("Wrong install dir for b script!\n");
my $rootdir = $1;
$cwd =~ s{^$rootdir/?}{};
if ($cwd) { $cwd .= "/"; }

my $builddir = "$rootdir/build";
my $ninja_file = "$builddir/build.ninja";
if (not (-e $builddir)) {
     print "Creating build dir [$builddir]\n";
     make_path($builddir);
}
if (not (-s $ninja_file)) {
     print "Generating Ninja build file [$ninja_file]\n";
     system("$rootdir/Make/build.pl > $ninja_file");
}

my $ninja_cmd = "ninja -C $rootdir -f $ninja_file ";
my @ninja_args = ();
my $skip = 0;
my $ntargets = 0;
foreach ( @ARGV ) {
    # we skip ninja option parameters
    if ( $skip ) { $skip=0; push(@ninja_args, $_); next; }
    if ( $_ eq "--version" || $_ eq "-v" || $_ eq "--verbose" || 
         $_ eq "--quit" || $_ eq "-n" || $_ eq "-h" ) { push(@ninja_args, $_); next; }
    if ( $_ eq "-C" || $_ eq "-f" || $_ eq "-C" || $_ eq "-j" || 
         $_ eq "-k" || $_ eq "-l" || $_ eq "-d" || $_ eq "-t" || $_ eq "-w" ) { $skip=1; push(@ninja_args, $_); next; }
    
    # consider targets as relative to cwd
    $ntargets ++;
    my $target = "$cwd$_";
    push(@ninja_args, $target);
}
# nj without arguments build the current dir
if (!$ntargets) { push(@ninja_args, $cwd); }
# print "ARGV=@ninja_args ntargtes=$ntargets CWD=$cwd\n";
system("$ninja_cmd @ninja_args");