/***************************************************************************\
* Copyright (c) 2008-2023                                                   *
* Claudio Pica, Ari Hietanen, Ulrik SÃ¸ndergaard, Sofie Martins              *
* All rights reserved.                                                      *
\***************************************************************************/

#include "../linear_algebra_gpu_kernels.hpp"
#include "utils.h"

// Error checking
#if !defined(_FIELD_TYPE)
#error Missing _FIELD_TYPE in linear_algebra_gpu.cu
#endif
#if !defined(_FIELD_DIM)
#error Missing _FIELD_DIM in linear_algebra_gpu.cu
#endif
#if !defined(_SITE_TYPE)
#error Missing _SITE_TYPE in linear_algebra_gpu.cu
#endif
#if !defined(_REAL)
#error Missing _REAL in linear_algebra_gpu.cu
#endif
#if !defined(_COMPLEX)
#error Missing _COMPLEX in linear_algebra_gpu.cu
#endif

/* s1=s2 */
_DECLARE_LINEAR_ALGEBRA_GPU_OP(void, copy, (_FIELD_TYPE * s1, _FIELD_TYPE *s2), (s1, s2)) {
    _TWO_SPINORS_MATCHING(s1, s2);
    _CUDA_FOR(s1, ixp,
              (id_gpu<_FIELD_DIM, _REAL><<<grid_size, BLOCK_SIZE_LINEAR_ALGEBRA, 0, 0>>>(
                  _GPU_DFIELD_BLK(s1, ixp, _FIELD_DIM), _GPU_DFIELD_BLK(s2, ixp, _FIELD_DIM), N)););
}

/* s1=0 */
_DECLARE_LINEAR_ALGEBRA_GPU_OP(void, zero, (_FIELD_TYPE * s1), (s1)) {
    _CUDA_FOR(s1, ixp,
              (zero_gpu<_FIELD_DIM, _REAL>
               <<<grid_size, BLOCK_SIZE_LINEAR_ALGEBRA, 0, 0>>>(_GPU_DFIELD_BLK(s1, ixp, _FIELD_DIM), N)););
}

//user interface macros
#undef _FIELD_TYPE
#undef _SITE_TYPE
#undef _REAL
#undef _COMPLEX
#undef _FIELD_DIM
#undef _ISREAL
